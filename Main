from coinbase.wallet.client import Client
from coinbase.wallet.error import TwoFactorRequiredError
import time
import requests
from datetime import datetime, timedelta


def marketCheck():
    test = client.get_buy_price(currency_pair = 'BTC-USD')
    print(test)
api_key =
api_secret =
client = Client(api_key, api_secret)
account = client.get_primary_account()
"Coinbase API get request for current buy price"
# estimate()
class estimate:
    total = 0
    count = 0
    averagePrice = 0
    dayEstimate = 0
    currentPrice = client.get_buy_price(currency_pair='BTC-USD')
    currentPrice = currentPrice.get("amount")

    Today = datetime.today().date()
    print(Today)
    end = Today - timedelta(days=10)  # date - days
    "Coindesk API get request to query legacy information on day scale"
    r = requests.get(
        "https://api.coindesk.com/v1/bpi/historical/close.json?start=" + str(end) + "&end=" + str(Today) + "")
    dates = r.json()['bpi'][str(end)]
    # print(dates)

    while (end != Today):
        dates = r.json()['bpi'][str(end)]
        print(dates)
        total = total+dates
        end = end + timedelta(days=1)
        count=count+1
    # print("check:"+str(count))
    averagePrice=total/count
    print("Average price: "+str(averagePrice))
    if(float(currentPrice)>averagePrice):
        print("Current:"+str(currentPrice)+" > Average:"+str(averagePrice))
    else:
        print("Current:"+str(currentPrice)+" < Average:"+str(averagePrice))
